-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE public.drivers
(
    id uuid NOT NULL,
    union_id uuid,
    transporter_id uuid,
    name text,
    truck_id uuid,
    rating integer,
    PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.jwt
(
    token character varying NOT NULL
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.orders
(
    id uuid NOT NULL,
    type text,
    status text,
    pickup_date text,
    drop_date text,
    transaction_id text,
    weight text,
    material text,
    cost text,
    shipper_id uuid,
    driver_id uuid,
    truck_id uuid,
    start_loc text,
    end_loc text,
    review text,
    transporter_id uuid,
    union_id uuid,
    PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.shipper
(
    id uuid NOT NULL,
    name text,
    order_done bigint,
    order_pending bigint,
    user_id uuid,
    PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.transporter
(
    id uuid NOT NULL,
    name text,
    order_pending bigint,
    order_done bigint,
    no_of_members bigint,
    no_of_trucks bigint,
    rating integer,
    date date,
    user_id uuid,
    union_id uuid,
    PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.transporter_members
(
    id uuid NOT NULL,
    transporter_id uuid,
    name text,
    designation text,
    address text,
    joining_date date,
    end_date date,
    rating integer,
    PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.trucks
(
    id uuid NOT NULL,
    name text,
    type text,
    truck_no text,
    driver_id uuid,
    capacity text,
    status text,
    transporter_id uuid,
    PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public."union"
(
    id uuid NOT NULL,
    name text,
    order_pending bigint,
    order_done bigint,
    no_of_members bigint,
    date_established date,
    rating integer,
    user_id uuid,
    PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.union_members
(
    id uuid NOT NULL,
    union_id uuid,
    name text,
    designation text,
    address text[],
    rating integer,
    PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public."user"
(
    password text,
    account_type text,
    id uuid NOT NULL,
    email text NOT NULL,
    username text,
    PRIMARY KEY (id, email)
)
WITH (
    OIDS = FALSE
);

ALTER TABLE public.drivers
    ADD FOREIGN KEY (transporter_id)
    REFERENCES public.transporter (id)
    NOT VALID;


ALTER TABLE public.drivers
    ADD FOREIGN KEY (truck_id)
    REFERENCES public.trucks (id)
    NOT VALID;


ALTER TABLE public.drivers
    ADD FOREIGN KEY (union_id)
    REFERENCES public."union" (id)
    NOT VALID;


ALTER TABLE public.orders
    ADD FOREIGN KEY (driver_id)
    REFERENCES public.transporter_members (id)
    NOT VALID;


ALTER TABLE public.orders
    ADD FOREIGN KEY (shipper_id)
    REFERENCES public.shipper (id)
    NOT VALID;


ALTER TABLE public.orders
    ADD FOREIGN KEY (transporter_id)
    REFERENCES public.transporter (id)
    NOT VALID;


ALTER TABLE public.orders
    ADD FOREIGN KEY (truck_id)
    REFERENCES public.trucks (id)
    NOT VALID;


ALTER TABLE public.orders
    ADD FOREIGN KEY (union_id)
    REFERENCES public."union" (id)
    NOT VALID;


ALTER TABLE public.shipper
    ADD FOREIGN KEY (user_id)
    REFERENCES public."user" (id)
    NOT VALID;


ALTER TABLE public.transporter
    ADD FOREIGN KEY (union_id)
    REFERENCES public."union" (id)
    NOT VALID;


ALTER TABLE public.transporter
    ADD FOREIGN KEY (user_id)
    REFERENCES public."user" (id)
    NOT VALID;


ALTER TABLE public.transporter_members
    ADD FOREIGN KEY (transporter_id)
    REFERENCES public.transporter (id)
    NOT VALID;


ALTER TABLE public.trucks
    ADD FOREIGN KEY (driver_id)
    REFERENCES public.transporter_members (id)
    NOT VALID;


ALTER TABLE public.trucks
    ADD FOREIGN KEY (transporter_id)
    REFERENCES public.transporter (id)
    NOT VALID;


ALTER TABLE public."union"
    ADD FOREIGN KEY (user_id)
    REFERENCES public."user" (id)
    NOT VALID;


ALTER TABLE public.union_members
    ADD FOREIGN KEY (union_id)
    REFERENCES public."union" (id)
    NOT VALID;

END;